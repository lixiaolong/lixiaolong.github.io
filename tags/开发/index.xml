<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>开发 on Raindrop</title>
    <link>/tags/%E5%BC%80%E5%8F%91/</link>
    <description>Recent content in 开发 on Raindrop</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 06 Dec 2020 17:26:31 +0800</lastBuildDate><atom:link href="/tags/%E5%BC%80%E5%8F%91/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>win10 develop init</title>
      <link>/posts/win10-develop-init/</link>
      <pubDate>Sun, 06 Dec 2020 17:26:31 +0800</pubDate>
      
      <guid>/posts/win10-develop-init/</guid>
      <description>win10 develop init 制作 win10 U 盘启动盘  访问链接 https://www.microsoft.com/zh-cn/software-download/windows10 选择 立即下载工具, 得到 U 盘制作工具 MediaCreationTool20H2.exe 插入 U 盘，大小至少 8G ，清理文件，然后运行 U 盘制作工具，按照提示一步步往下即可  安装 win10 系统  备份重要文件，最好有个移动硬盘，将重要的资料备份，因为下面要全新安装 win10 ，所以电脑上的文件会全部清空 重启电脑，启动过程中进入 BIOS ，进入方式通常是启动过程中按 DEL ，ESC 等按键，不同电脑可能不一样 进入 BIOS 后，按照界面上提示的按键进行菜单切换，找到 BOOT 相关的设置，将启动方式设置为 UEFI，将 Secure Boot 暂时关闭 插入 U 盘，按照 BIOS 的提示保存并重启系统，启动过程中进入快速启动项选择，通常是按 F8 或 F11 等按键 选择 UEFI U 盘启动，进入到 windows10 的安装界面 进行分区，将所有分区都删除，这里操作前一定要确认电脑硬盘上已经没有重要数据，而且移动硬盘也没有插在电脑上  新建分区，先新建一个 120G 的分区来装系统，如果硬盘较大，可以分多一点 然后再分配一个 100G 的分区备用，后续用来安装 deepin 系统 将剩余空间全部分配成一个分区，用来做数据分区，也可以按照自己的需求划分其他分区   分区完成后，就可以选择刚才分配的系统分区来安装系统了，后面的操作就是等待并按提示进行，直到 win10 系统安装完成 登录账户推荐微软的账户登录，可以配置同步，系统激活状态也会同步，同时还可以浏览器同步  安装常用软件  压缩软件，推荐 7z，下载链接 https://www.</description>
    </item>
    
    <item>
      <title>编译环境搭建</title>
      <link>/posts/devtools/</link>
      <pubDate>Sun, 19 Apr 2020 21:02:31 +0800</pubDate>
      
      <guid>/posts/devtools/</guid>
      <description>Windows下搭建docker环境 安装docker-machine 1）docker-machine是用来创建boot2docker虚拟机的，下载地址
https://github.com/docker/machine/releases
2）将文件存放到PATH环境变量对应的目录中
3）如有必要，给docker-machine加可执行权限
使用docker-machine创建虚拟机 1）创建虚拟机的命令
docker-machine create --virtualbox-disk-size &amp;#34;50000&amp;#34; --virtualbox-cpu-count &amp;#34;4&amp;#34; \  --virtualbox-memory &amp;#34;4096&amp;#34; -d virtualbox devtool 2）如果执行的非常慢，在下载boot2docker很久，可以先手动下载该ISO，放到cache目录下，再执行命令就会快很多，下面是windows下的路径
C:\Users\username\.docker\machine\cache 3）手动下载boot2docker的地址，将下载好的ISO放入cache文件夹即可
https://github.com/boot2docker/boot2docker/releases
4）创建好虚拟机之后，就可以通过如下命令连接到虚拟机的ssh中
docker-machine start devtool docker-machine ssh devtool 5）进入虚拟机之后，可以通过sudo -s切换到root，无需密码
6）虚拟机中自带了docker命令，而且在/c/是和windows主机的c盘有映射的，可以直接共享文件
使用docker-compose管理docker容器 docker-compose是一个docker的配置管理命令，可以通过一个配置文件，管理多个docker容器，还支持指定Dockerfile，几乎所有docker相关的命令都有对应的配置。
1）下载docker-compose，将可执行文件放到boot2docker虚拟机中
https://github.com/docker/compose/releases
2）编写docker-compose.yaml配置文件
Version0: &amp;#34;3&amp;#34; services: devtool: build: . volumes: - /c/Users/li_xi/work/build/:/build working_dir: /build stdin_open: true tty: true 3）编写Dockerfile
FROMcentos:7RUN yum -y install kde-l10n-Chinese &amp;amp;&amp;amp; \  yum -y reinstall glibc-common &amp;amp;&amp;amp; \  localedef -c -f UTF-8 -i zh_CN zh_CN.</description>
    </item>
    
  </channel>
</rss>
